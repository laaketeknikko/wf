name: Deployment

on:
   push:
      branches: master
   pull_request:
      branches: master
      types: [opened, closed]

jobs:
   # We checkout the frontend repository, build it and push
   # the build into our repository.
   # Not sure how you'd actually do this without
   # having to do some kind of manual work at some point.
   # But, local copies do need to be updated anyway regularly,
   # so I think this approach is reasonable.
   build_and_push_frontend:
      runs-on: ubuntu-22.04
      permissions:
         contents: write
      steps:
         - uses: actions/setup-node@v4
           with:
              node-version: 21.1.0
         - uses: actions/checkout@v4
           with:
              path: backend
         - uses: actions/checkout@v4
           with:
              repository: laaketeknikko/renderfrontend
              token: ${{ secrets.READ_RENDERFRONTEND }}
              path: frontend
         - name: Build frontend
           run: rm -rf ./backend/front && cd frontend && npm install && npm run build && cp -r ./dist ../backend/front
         - name:
              Commit and push built frontend to backend repository
              # Uses the GITHUB_TOKEN. Events triggered by GITHUB_TOKEN
              # don't cause workflows to run, so we don't get infinite loop.
           uses: stefanzweifel/git-auto-commit-action@8756aa072ef5b4a080af5dc8fef36c5d586e521d
           with:
              commit_message: Automatic frontend push
              repository: ./backend
              file_pattern: "./front"
         - name: List contents
           run: ls
         - name: List frontend contents
           run: ls frontend
         - name: List backend contents
           run: ls backend
         - name: List backend frontend build
           run: ls backend/front

   test_and_lint:
      runs-on: ubuntu-22.04
      steps:
         - uses: actions/setup-node@v4
           with:
              node-version: 21.1.0
         - uses: actions/checkout@v4
         - name: install
           run: npm install
         - name: lint automatic fix
           run: npm run lint-fix
         - name: lint check
           run: npm run lint-check

   versioning:
      if: !contains(join(github.event.commits.*.message) , '#skip') || ( github.event_name == 'pull_request' && github.event.pull_request.merged == 'true')
      needs: [build_and_push_frontend, test_and_lint]
      runs-on: ubuntu-22.04
      permissions:
         contents: write
      steps:
         - uses: actions/checkout@v4
           with:
              ref: ${{github.event.pull_request.merge_commit_sha}}
              fetch-depth: "0"
         - name: Bump version and create version tag
           uses: anothrNick/github-tag-action@a2c70ae13a881faf2b4953baaa9e49731997ab36
           env:
              GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              WITH_V: true
              DEFAULT_BUMP: patch
         - name: Debug printing
           run: echo ${{join(github.event.commits.*.message)}} && echo ${{!contains(join(github.event.commits.*.message) , '#skip') }} && echo ${{github.event.pull_request.merged == 'true'}}
         - name: Debug printing
           run: echo ${{github.event_name}}

   deploy_to_render:
      if: ${{!contains(join(github.event.commits.*.message) , '#skip') }} && ${{github.event.pull_request.merged == true}}
      runs-on: ubuntu-22.04
      needs: [build_and_push_frontend, test_and_lint]
      steps:
         - name: Deploy to Render.com using deploy hook url
           env:
              deploy_url: ${{secrets.RENDER_DEPLOY_HOOK_URL}}
           run: curl "$deploy_url"
#####
